{
  "sksl": {
    "entrypoint": "cosmic_background_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform vec2 u_mouse;\n\nvec4 outputColor;\n\nvoid FLT_main()\n{\n    vec2 fragCoord_1 = flutter_FragCoord.xy;\n    vec2 uv_1 = fragCoord_1 / u_resolution;\n    uv_1 = (uv_1 * 2.0) - vec2(1.0);\n    uv_1.x *= (u_resolution.x / u_resolution.y);\n    uv_1.y -= (u_time * 0.1500000059604644775390625);\n    vec3 dir_1 = vec3(uv_1 * 0.800000011920928955078125, 1.0);\n    float time_1 = (u_time * 0.00999999977648258209228515625) + 0.25;\n    float a1_1 = 0.5 + ((u_mouse.x / u_resolution.x) * 2.0);\n    float a2_1 = 0.800000011920928955078125 + ((u_mouse.y / u_resolution.y) * 2.0);\n    mat2 rot1_1 = mat2(vec2(cos(a1_1), sin(a1_1)), vec2(-sin(a1_1), cos(a1_1)));\n    mat2 rot2_1 = mat2(vec2(cos(a2_1), sin(a2_1)), vec2(-sin(a2_1), cos(a2_1)));\n    vec3 _113 = dir_1;\n    vec2 _115 = _113.xz * rot1_1;\n    dir_1.x = _115.x;\n    dir_1.z = _115.y;\n    vec3 _122 = dir_1;\n    vec2 _124 = _122.xy * rot2_1;\n    dir_1.x = _124.x;\n    dir_1.y = _124.y;\n    vec3 from_1 = vec3(1.0, 0.5, 0.5);\n    from_1 += vec3(time_1 * 2.0, time_1, -2.0);\n    vec3 _139 = from_1;\n    vec2 _141 = _139.xz * rot1_1;\n    from_1.x = _141.x;\n    from_1.z = _141.y;\n    vec3 _147 = from_1;\n    vec2 _149 = _147.xy * rot2_1;\n    from_1.x = _149.x;\n    from_1.y = _149.y;\n    float s_1 = 0.100000001490116119384765625;\n    float fade_1 = 1.0;\n    vec3 v_1 = vec3(0.0);\n    for (int r_1 = 0; r_1 < 20; r_1++)\n    {\n        vec3 p_1 = from_1 + ((dir_1 * s_1) * 0.5);\n        p_1 = abs(vec3(0.85000002384185791015625) - mod(p_1, vec3(1.7000000476837158203125)));\n        float pa_1 = 0.0;\n        float a_1 = 0.0;\n        for (int i_1 = 0; i_1 < 17; i_1++)\n        {\n            p_1 = (abs(p_1) / vec3(dot(p_1, p_1))) - vec3(0.5299999713897705078125);\n            a_1 += abs(length(p_1) - pa_1);\n            pa_1 = length(p_1);\n        }\n        float dm_1 = max(0.0, 0.300000011920928955078125 - ((a_1 * a_1) * 0.001000000047497451305389404296875));\n        a_1 *= (a_1 * a_1);\n        if (r_1 > 6)\n        {\n            fade_1 *= (1.0 - dm_1);\n        }\n        v_1 += vec3(fade_1);\n        v_1 += (((vec3(s_1, s_1 * s_1, ((s_1 * s_1) * s_1) * s_1) * a_1) * 0.0005000000237487256526947021484375) * fade_1);\n        fade_1 *= 0.730000019073486328125;\n        s_1 += 0.100000001490116119384765625;\n    }\n    v_1 = mix(vec3(length(v_1)), v_1, vec3(0.85000002384185791015625));\n    outputColor = vec4(v_1 * 0.00999999977648258209228515625, 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return outputColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "u_resolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "u_time",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "u_mouse",
        "rows": 2,
        "type": 10
      }
    ]
  }
}